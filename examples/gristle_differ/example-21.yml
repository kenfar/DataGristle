# This example demonstrates a simple data warehouse diff that might be used at the start of a data
# pipeline, right after extracting the files.  It compares a full extract to the prior full extract.
#
# Not many features of the diff are used other than being csv dialect aware, and referencing columns
# by name rather than field position.
#
infiles: [example-21_sensor_old_input1.csv,
          example-21_sensor_new_input2.csv]
out-dir: /tmp/example-21_actual_output_files
temp_dir: null

# Ordered list of columns that get assigned positions starting at 0.  This allows us to refer
# to the fields by name.  This is optional - we could leave it empty and just refer to all fields
# by position instead.
col_names: [org,sensor_id,site,sensor_ip,sensor_brand,sensor_ver,sensor_type,update_ts,comments]

key-cols: [org, sensor_id]  #
ignore_cols: [comments]     # won't be on new file - just our debugging comments
compare_cols: []            #

variables: []

already_sorted: false
already_uniq: false

# Here's where the output records are transformed slightly.  Note that all fields must be provided, even if null.
assignments:  []
verbosity: debug

quoting: quote_none
delimiter: '|'
has_header: true
quotechar: null
escapechar: null
doublequote: null
skipinitialspace: null
